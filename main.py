
# Импортируем модуль numpy
import numpy as np
from sympy import *
from random import *

# Инициализация генератора (seed = 7) для идентичности данных
# задаем граф (graph) 20х20 со значениями 1..50 (след)
# задаем size - размерность графа

size = 5
graph = np.array([[0,  2,  30, 9,  1],
                  [4,  0,  47, 7,  7],
                  [31, 33, 0,  33, 36],
                  [20, 13, 16, 0,  28],
                  [9,  36, 22, 22, 0]])
# size = 5
# np.random.seed = 7
# graph = np.random.randint(1, 50, size = (size, size))
# ---------------------------------------------------------------
# Инициализация параметров алгоритма:
# t0 - задаем начало отсчета времени
# tmax - задаем начало отсчета времени
# α (alpha),  β (beta) - два регулируемых параметра,
# задающие веса следа феромона (жадность) и видимости при выборе маршрута (стадность);
# e - количество элитных муравьев;
# Q - регулируемый параметр порядка длины оптимального маршрута;
# τ (tau0) - начальное количество феромона;
# m -  количество муравьев (задаем равным количеству городов size*size);
# Lmin - начальное значение минимума длины оптимального маршрута;
# ro  - коэффициент испарения феромона;

t0 = 1
tmax = 100
alpha = 9
beta = 5
e = 1
p = 0.7
Q = 15*size
tau0 = 0.1
m = size*size
Lmin = 1000
ro = 0.001

# ---------------------------------------------------------------

# eta - инициализация матрицы видимости
eta = np.zeros((size, size))
# tau - инициализация матрицы феромонов
tau = np.zeros((size, size))

# Задаем начальное ненулевое значение феромона на всех ребрах графа,
# а также задаем матрицу видимости
for i in range (0, size):
    for j in range (0, size):
        if ( i != j):
            eta[i, j] = 1/graph[i, j]
            tau[i, j] = tau0
        else:
            tau[i, j] = 0


for t in range (t0, tmax):
    for ant in range (1, m):



print(graph)
print(eta)
print(tau)
